import { RootConfigTypes } from '@trpc/server/dist/core/internals/config';
import { ErrorFormatter } from '@trpc/server/dist/error/formatter';
import { TRPCErrorShape } from '@trpc/server/dist/rpc';
import { TRPCContext } from './context.interface';
import type { Class } from 'type-fest';
/**
 * "TRPCModule" options object.
 */
export interface TRPCModuleOptions {
    /**
     * Path to trpc router and helpers types output.
     */
    autoSchemaFile?: string;
    /**
     * The base path for all trpc requests.
     * @default "/trpc"
     */
    basePath?: string;
    /**
     * The exposed trpc options when creating a route with either `createExpressMiddleware` or `createFastifyMiddleware`.
     * If not provided, the adapter will use a default createContext.
     * @link https://nestjs-trpc.io/docs/context
     */
    context?: Class<TRPCContext>;
    /**
     * Use custom error formatting
     * @link https://trpc.io/docs/error-formatting
     */
    errorShape?: ErrorFormatter<RootConfigTypes['ctx'], TRPCErrorShape<number> & {
        [key: string]: any;
    }>;
    /**
     * Use a data transformer
     * @link https://trpc.io/docs/data-transformers
     */
    transformer?: RootConfigTypes['transformer'];
}
//# sourceMappingURL=module-options.interface.d.ts.map