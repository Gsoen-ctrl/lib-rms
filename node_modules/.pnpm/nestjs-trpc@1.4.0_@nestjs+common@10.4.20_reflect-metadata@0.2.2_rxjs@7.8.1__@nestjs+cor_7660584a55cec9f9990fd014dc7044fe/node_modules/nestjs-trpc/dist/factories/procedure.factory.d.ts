import { ModuleRef } from '@nestjs/core';
import { ProcedureFactoryMetadata, TRPCPublicProcedure } from '../interfaces/factory.interface';
import { TRPCMiddleware } from '../interfaces';
export declare class ProcedureFactory {
    private moduleRef;
    private readonly consoleLogger;
    private readonly metadataScanner;
    constructor(moduleRef: ModuleRef);
    getProcedures(instance: unknown, prototype: Record<string, Function>): Array<ProcedureFactoryMetadata>;
    private extractProcedureParams;
    private extractProcedureMetadata;
    serializeProcedures(procedures: Array<ProcedureFactoryMetadata>, instance: any, camelCasedRouterName: string, procedureBuilder: TRPCPublicProcedure, routerMiddlewares: TRPCMiddleware | undefined): Record<string, any>;
    private createProcedureInstance;
    private createCustomProcedureInstance;
    private serializeProcedureParams;
    private createSerializedProcedure;
}
//# sourceMappingURL=procedure.factory.d.ts.map