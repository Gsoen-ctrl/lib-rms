import { Deferred } from './deffered.class';
export interface ILocation {
    path: string;
    source: string;
    line: number;
    column: number;
    origin?: ILocation;
}
interface ICacheItem {
    ref: (...args: any[]) => any;
    location: Deferred<ILocation>;
}
export declare class CacheManager {
    fnCache: ICacheItem[];
    /**
     * Adds a function location to the cache
     * @chainable
     * @param item The item to add
     */
    add(item: ICacheItem): CacheManager;
    /**
     * Get a function location from its reference
     * @param fn The function reference
     */
    get(fn: () => any): ICacheItem | undefined;
    /**
     * Clear the cache
     * @chainable
     */
    clear(): this;
}
export {};
//# sourceMappingURL=cache-amanger.class.d.ts.map